
Name: Abdullah Ahmed
    SAP ID: 53639
                Semester: 3rd


Q1:
#include <iostream>
using namespace std;

int main() {
    int rows, cols;
    cout << "Enter number of rows: ";
    cin >> rows;
    cout << "Enter number of columns: ";
    cin >> cols; 
    int arr[rows][cols]; // Define 2D array 
    cout << "Enter elements of the array:" << endl;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
           
            cin >> arr[i][j];
        }
    }

    int sum = 0;
    long long product = 1; 
    int totalElements = rows * cols;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            sum += arr[i][j];
            product *= arr[i][j];
        }
    } 
    double average = sum / (totalElements * 1.0); 

    cout << "Sum: " << sum << endl;
    cout << "Product: " << product << endl;
    cout << "Average: " << average << endl;

    return 0;
}



Q2
#include <iostream>
using namespace std;

void changeValues(int* a, int* b) {
    int temp = *a;  
    *a = *b;         
    *b = temp;      
}

int main() {
    int x, y;

    cout << "Enter the value of x: ";
    cin >> x;
    cout << "Enter the value of y: ";
    cin >> y;

    cout << "Before change: x = " << x << ", y = " << y << endl;

    changeValues(&x, &y);

    cout << "After change: x = " << x << ", y = " << y << endl;

    return 0;
}


Q3 

#include <iostream>
using namespace std;

int main() {
    const int size = 10;  
    int arr[size];

    cout << "Enter 10 values:" << endl;
    for (int i = 0; i < size; i++) {
        cout << "Value " << i + 1 << ": ";
        cin >> arr[i];
    }

    int largest = arr[0];
    int smallest = arr[0];

    for (int i = 1; i < size; i++) {
        if (arr[i] > largest) {
            largest = arr[i];
        }
        if (arr[i] < smallest) {
            smallest = arr[i];
        }
    }

    cout << "The largest value is: " << largest << endl;
    cout << "The smallest value is: " << smallest << endl;

    return 0;
}



Q5
#include <iostream>
using namespace std;

int getTotal(int arr[][4], int rows, int cols) {
    int total = 0;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            total += arr[i][j];
        }
    }
    return total;
}

double getAverage(int arr[][4], int rows, int cols) {
    int total = getTotal(arr, rows, cols);
    int totalElements = rows * cols;
    return total / (double)totalElements;  
}

int getRowTotal(int arr[][4], int rowIndex, int cols) {
    int rowTotal = 0;
    for (int j = 0; j < cols; j++) {
        rowTotal += arr[rowIndex][j];
    }
    return rowTotal;
}

int getColumnTotal(int arr[][4], int rows, int colIndex) {
    int colTotal = 0;
    for (int i = 0; i < rows; i++) {
        colTotal += arr[i][colIndex];
    }
    return colTotal;
}

int getHighestInRow(int arr[][4], int rowIndex, int cols) {
    int highest = arr[rowIndex][0];  
    for (int j = 1; j < cols; j++) {
        if (arr[rowIndex][j] > highest) {
            highest = arr[rowIndex][j];
        }
    }
    return highest;
}

int getHighestInColumn(int arr[][4], int rows, int colIndex) {
    int highest = arr[0][colIndex];  
    for (int i = 1; i < rows; i++) {
        if (arr[i][colIndex] > highest) {
            highest = arr[i][colIndex];
        }
    }
    return highest;
}

int main() {
    int array[4][4] = {
        {3, 5, 7, 9},
        {2, 8, 6, 4},
        {10, 1, 3, 7},
        {9, 2, 5, 11}
    };
    
    int rows = 4;
    int cols = 4;

   
    cout << "Total of all elements: " << getTotal(array, rows, cols) << endl;
    cout << "Average of all elements: " << getAverage(array, rows, cols) << endl;
    cout << "Total of row 2: " << getRowTotal(array, 2, cols) << endl;
    cout << "Total of column 3: " << getColumnTotal(array, rows, 3) << endl;
    cout << "Highest value in row: " << getHighestInRow(array, 0, cols) << endl;
    cout << "Highest value in column: " << getHighestInColumn(array, rows, 2) << endl;

    return 0;
}



Q6: 
#include <iostream>
using namespace std;

int main() {
    int n;  

    cout << "Enter the number of integers: ";
    cin >> n;

    int* arr = new int[n];

    cout << "Enter " << n << " integers:" << endl;
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    int sumOdd = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] % 2 != 0) {  
            sumOdd += arr[i];
        }
    }

    cout << "The sum of odd integers is: " << sumOdd << endl;

    delete[] arr;

    return 0;
}



Q7: 
#include <iostream>
using namespace std;

int main() {
    int n = 42;  
    int* ptr;      

    ptr = &n;

    cout << "Value of variable: " << n << endl;
    cout << "Address of variable: " << &n << endl;
    cout << "Pointer ptr holds the address: " << ptr << endl;
    cout << "Value at the address stored in ptr: " << *ptr << endl;

    return 0;
}



Q8: 
#include <iostream>
using namespace std;

int main() {
    int a, b;  
    int* ptrA; 
    int* ptrB; 
    
    cout << "Enter an integer for 'a': ";
    cin >> a;
    cout << "Enter an integer for 'b': ";
    cin >> b;

    ptrA = &a;
    ptrB = &b;

    cout << "Value of 'a' in pointer ptrA: " << *ptrA << endl;
    cout << "Value of 'b' in pointer ptrB: " << *ptrB << endl;

    return 0;
}

Q9.
#include <iostream>
#include <cmath>  
using namespace std;

int Addition(int a, int b) {
    return a + b;
}

int Subtraction(int a, int b) {
    return a - b;
}

int Multiplication(int a, int b) {
    return a * b;
}

double Division(int a, int b) {
    if (b != 0) {
        return (double)a / b;  
    } else {
        cout << "Error! Division by zero." << endl;
        return 0;
    }
}

int Pow(int number, int power) {
    return pow(number, power);  
}

void Menu() {
    
    int choice;
    int num1, num2;
    
    cout << "Select an operation:\n";
    cout << "1. Addition\n";
    cout << "2. Subtraction\n";
    cout << "3. Multiplication\n";
    cout << "4. Division\n";
    cout << "5. Power\n";
    
    cout << "Enter your choice: ";
    cin >> choice;
    
    switch (choice) {
        case 1:  
            cout << "Enter two numbers: ";
            cin >> num1 >> num2;
            cout << "Result: " << Addition(num1, num2) << endl;
            break;

        case 2:  
            cout << "Enter two numbers: ";
            cin >> num1 >> num2;
            cout << "Result: " << Subtraction(num1, num2) << endl;
            break;

        case 3:  
            cout << "Enter two numbers: ";
            cin >> num1 >> num2;
            cout << "Result: " << Multiplication(num1, num2) << endl;
            break;

        case 4:  
            cout << "Enter two numbers: ";
            cin >> num1 >> num2;
            cout << "Result: " << Division(num1, num2) << endl;
            break;

        case 5:  
            cout << "Enter the base number and the exponent: ";
            cin >> num1 >> num2;
            cout << "Result: " << Pow(num1, num2) << endl;
            break;

        default:  
            cout << "Invalid choice. Please select a valid operation." << endl;
            break;
    }
    
    
}

int main() {
    
    Menu();  

    return 0;
}






